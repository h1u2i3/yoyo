class ApplicationController < ActionController::Base
  protect_from_forgery with: :exception
end

class AuthenticateController < ApplicationController
  # this should be the defalut flow of this controller
  flow :auth_flow
end

class ArticleController < AuthenticateController
  # this should be the default flow of this controller
  flow :article_flow
end

class CommentController < AuthenticateController
  # so this controller should access to the
  # comment_flow and the auth_flow

  # the defalut resource flow
  # can be auto generated
  flow :comment_flow, :crud

  # the special flow
  flow :article_trend_flow, :trends
end

# make sure
# 1. controller instance as the flow instance's instance variable
# 2. flow should just be a way to deal with the message send from client browser
# and should be able to fetch in the view (how to feth and how to use these flows)

# steps
# 1. user visit the /articles route
# 2. this should be processed by the article controller and then the controller instance
# pass the permission to the resource flow, which can generated by the controler itself


# so the flow must belongs_to the action
# 1. user vist the /articles/trends route
# 2. this should be processed by the article controller, and the action must be trends
# 3. the controller don't have the trends methods, but it will pass its permission to the flow
# that this route should belongs_to
